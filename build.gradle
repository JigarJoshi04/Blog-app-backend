buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.7.0")
    }
}
plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'checkstyle'
}
 
group = 'com.blogapp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

checkstyle{
    toolVersion "7.8.1"
    configFile file("${rootProject.projectDir}/etc/checkstyle/rules.xml")
}
repositories {
	mavenCentral()
}

dependencies {    
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.7.0'
    // https://mvnrepository.com/artifact/javax.persistence/javax.persistence-api
    implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
    //implementation 'com.fasterxml.jackson.core:jackson-databind:2.8.9'
	annotationProcessor 'org.projectlombok:lombok'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.7.0'


	// https://mvnrepository.com/artifact/javax.inject/javax.inject
	implementation group: 'javax.inject', name: 'javax.inject', version: '1'
	implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.2'
	implementation group: "javax.inject", name: "javax.inject", version: "1"
    implementation("org.springframework.boot:spring-boot-starter-actuator:2.7.0")
    implementation group: "com.google.guava", name: "guava", version: "20.0"
	implementation 'org.modelmapper:modelmapper-examples:3.1.0'
	runtimeOnly "org.springframework.boot:spring-boot-devtools"
	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
    implementation group: 'org.springframework.security', name: 'spring-security-core', version: '5.7.1'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.7.0'
    testImplementation("org.mockito:mockito-junit-jupiter:2.22.0")
    testImplementation("org.springframework.boot:spring-boot-starter-test:2.7.0") {
        exclude group: "junit", module: "junit"
    }

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.3.1")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.3.1")
    testImplementation("org.junit.platform:junit-platform-launcher" +
            ":1.3.1")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.3.1")

	
}
configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}
tasks.named('test') {
	useJUnitPlatform()
}
